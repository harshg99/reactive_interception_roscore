# Makefile of HaarTrainig for Linux
#
# Run
# $ cp _cvhaartraining.h.linux _cvhaartraining.h
# $ make
# $ make install (copy into bin directory)
#
# It seems that the _cvhaaartrainig.h is different under windows version and linux version. 
#
# You may want to modify a sophisticated Makefile, opencv-x.x.x/apps/haartraining/src/Makefile,
# to compile mergevec, vec2img and so on together, but the Makefile is not human readable
# because it is generated by automake (Makefile.am). It is difficult to modify and
# this is the reason why I wrote this Makefile by myself. 
#
# Author(s)
#  Naotoshi Seo <sonots(at)sonots.com>
#
# History
#  08/28/2008 - Revised
#  03/12/2006 - First Edition

CC = g++
LINK = g++
INSTALL = install
CFLAGS = `pkg-config --cflags opencv` -I../include -I.
LFLAGS = `pkg-config --libs opencv`

# Compile
all: createsamples haartraining performance mergevec vec2img facedetect convert_cascade

cvboost.o: cvboost.cpp
	$(CC) $(CFLAGS) -o $@ -c $^
cvhaarclassifier.o: cvhaarclassifier.cpp
	$(CC) $(CFLAGS) -o $@ -c $^
cvhaartraining.o: cvhaartraining.cpp
	$(CC) $(CFLAGS) -o $@ -c $^
cvcommon.o: cvcommon.cpp
	$(CC) $(CFLAGS) -o $@ -c $^
cvsamples.o: cvsamples.cpp
	$(CC) $(CFLAGS) -o $@ -c $^

createsamples.o: createsamples.cpp
	$(CC) $(CFLAGS) -o $@ -c $^
haartraining.o: haartraining.cpp
	$(CC) $(CFLAGS) -o $@ -c $^
performance.o: performance.cpp
	$(CC) $(CFLAGS) -o $@ -c $^
mergevec.o: mergevec.cpp
	$(CC) $(CFLAGS) -o $@ -c $^
vec2img.o: vec2img.cpp
	$(CC) $(CFLAGS) -o $@ -c $^
facedetect.o: facedetect.c
	$(CC) $(CFLAGS) -o $@ -c $^
convert_cascade.o: convert_cascade.c
	$(CC) $(CFLAGS) -o $@ -c $^

libcvhaartraining.a: cvboost.o cvhaarclassifier.o cvhaartraining.o cvcommon.o cvsamples.o
	ar cru $@ $^
	ranlib $@

createsamples: createsamples.o libcvhaartraining.a
	$(LINK) -o $@ $^ $(LFLAGS)
haartraining: haartraining.o libcvhaartraining.a
	$(LINK) -o $@ $^ $(LFLAGS)
performance: performance.o libcvhaartraining.a
	$(LINK) -o $@ $^ $(LFLAGS)
mergevec: mergevec.o libcvhaartraining.a
	$(LINK) -o $@ $^ $(LFLAGS)
vec2img: vec2img.o libcvhaartraining.a
	$(LINK) -o $@ $^ $(LFLAGS)
facedetect: facedetect.o
	$(LINK) -o $@ $^ $(LFLAGS)
convert_cascade: convert_cascade.o
	$(LINK) -o $@ $^ $(LFLAGS)

clean:
	rm -f createsamples haartraining performance mergevec vec2img facedetect convert_cascade *.o *.a

install: all
	$(INSTALL) --strip createsamples haartraining performance mergevec vec2img facedetect convert_cascade ../bin
